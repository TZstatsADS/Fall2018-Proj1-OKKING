color = 'random-dark', backgroundColor = "white",
minRotation = -pi/4, maxRotation = pi/4, shuffle = TRUE,
rotateRatio = 0.4, shape = 'circle', ellipticity = 0.65,
widgetsize = NULL, figPath = NULL, hoverFunction = NULL)
wordcloud2(word_40above[4:30,], size = 0.3, minSize = 0, gridSize =  0,
fontFamily = 'Segoe UI', fontWeight = 'bold',
color = 'random-dark', backgroundColor = "white",
minRotation = -pi/4, maxRotation = pi/4, shuffle = TRUE,
rotateRatio = 0.4, shape = 'circle', ellipticity = 0.65,
widgetsize = NULL, figPath = NULL, hoverFunction = NULL)
par(mfrow=c(2, 2))
# Under 25 group
nrc_under25<-merge(x = word_under25,y = get_sentiments("nrc"),by.x = "word", by.y = "word")
names(nrc_under25)[names(nrc_under25) == "n"] <- "Frequency"
nrc_senti_under25 <- nrc_under25 %>%
select(Frequency, sentiment)
# colSums(table(nrc_senti_under25))
barplot(colSums(table(nrc_senti_under25)), col = "lightskyblue1",
main = "Under 25",
ylab = "Frequency", xlab = "Sentiment",
border = NA, cex.names=0.7)
# Between 25 and 30
nrc_25_30<-merge(x = word_25_30,y = get_sentiments("nrc"),by.x = "word", by.y = "word")
names(nrc_25_30)[names(nrc_25_30) == "n"] <- "Frequency"
nrc_senti_25_30 <- nrc_25_30 %>%
select(Frequency, sentiment)
# colSums(table(nrc_25_30))
barplot(colSums(table(nrc_senti_25_30)), col = "green",
main = "25~30",
ylab = "Frequency", xlab = "Sentiment",
border = NA, cex.names=0.7)
# Between 30 and 40
nrc_30_40<-merge(x = word_30_40,y = get_sentiments("nrc"),by.x = "word", by.y = "word")
names(nrc_30_40)[names(nrc_30_40) == "n"] <- "Frequency"
nrc_senti_30_40 <- nrc_30_40 %>%
select(Frequency, sentiment)
# colSums(table(nrc_30_40))
barplot(colSums(table(nrc_senti_30_40)), col = "orange",
main = "30~40",
ylab = "Frequency", xlab = "Sentiment",
border = NA, cex.names=0.7)
# Between 40 above
nrc_40above<-merge(x = word_40above,y = get_sentiments("nrc"),by.x = "word", by.y = "word")
names(nrc_40above)[names(nrc_40above) == "n"] <- "Frequency"
nrc_senti_40above <- nrc_40above %>%
select(Frequency, sentiment)
# colSums(table(nrc_45above))
barplot(colSums(table(nrc_senti_40above)), col = "purple",
main = "40 above",
ylab = "Frequency", xlab = "Sentiment",
border = NA, cex.names=0.7)
wordcloud2(word_under25[4:30,], size = 0.3, minSize = 0, gridSize =  0,
fontFamily = 'Segoe UI', fontWeight = 'bold',
color = 'random-dark', backgroundColor = "white",
minRotation = -pi/4, maxRotation = pi/4, shuffle = TRUE,
rotateRatio = 0.4, shape = 'circle', ellipticity = 0.65,
widgetsize = NULL, figPath = NULL, hoverFunction = NULL)
wordcloud2(word_25_30[4:30,], size = 0.3, minSize = 0, gridSize =  0,
fontFamily = 'Segoe UI', fontWeight = 'bold',
color = 'random-dark', backgroundColor = "white",
minRotation = -pi/4, maxRotation = pi/4, shuffle = TRUE,
rotateRatio = 0.4, shape = 'circle', ellipticity = 0.65,
widgetsize = NULL, figPath = NULL, hoverFunction = NULL)
wordcloud2(word_30_40[4:30,], size = 0.3, minSize = 0, gridSize =  0,
fontFamily = 'Segoe UI', fontWeight = 'bold',
color = 'random-dark', backgroundColor = "white",
minRotation = -pi/4, maxRotation = pi/4, shuffle = TRUE,
rotateRatio = 0.4, shape = 'circle', ellipticity = 0.65,
widgetsize = NULL, figPath = NULL, hoverFunction = NULL)
wordcloud2(word_40above[4:30,], size = 0.3, minSize = 0, gridSize =  0,
fontFamily = 'Segoe UI', fontWeight = 'bold',
color = 'random-dark', backgroundColor = "white",
minRotation = -pi/4, maxRotation = pi/4, shuffle = TRUE,
rotateRatio = 0.4, shape = 'circle', ellipticity = 0.65,
widgetsize = NULL, figPath = NULL, hoverFunction = NULL)
wordcloud2(word_under25[4:18,], size = 0.3, minSize = 0, gridSize =  0,
fontFamily = 'Segoe UI', fontWeight = 'bold',
color = 'random-dark', backgroundColor = "white",
minRotation = -pi/4, maxRotation = pi/4, shuffle = TRUE,
rotateRatio = 0.4, shape = 'circle', ellipticity = 0.65,
widgetsize = NULL, figPath = NULL, hoverFunction = NULL)
wordcloud2(word_25_30[4:15,], size = 0.3, minSize = 0, gridSize =  0,
fontFamily = 'Segoe UI', fontWeight = 'bold',
color = 'random-dark', backgroundColor = "white",
minRotation = -pi/4, maxRotation = pi/4, shuffle = TRUE,
rotateRatio = 0.4, shape = 'circle', ellipticity = 0.65,
widgetsize = NULL, figPath = NULL, hoverFunction = NULL)
wordcloud2(word_30_40[4:15,], size = 0.3, minSize = 0, gridSize =  0,
fontFamily = 'Segoe UI', fontWeight = 'bold',
color = 'random-dark', backgroundColor = "white",
minRotation = -pi/4, maxRotation = pi/4, shuffle = TRUE,
rotateRatio = 0.4, shape = 'circle', ellipticity = 0.65,
widgetsize = NULL, figPath = NULL, hoverFunction = NULL)
wordcloud2(word_40above[4:15,], size = 0.3, minSize = 0, gridSize =  0,
fontFamily = 'Segoe UI', fontWeight = 'bold',
color = 'random-dark', backgroundColor = "white",
minRotation = -pi/4, maxRotation = pi/4, shuffle = TRUE,
rotateRatio = 0.4, shape = 'circle', ellipticity = 0.65,
widgetsize = NULL, figPath = NULL, hoverFunction = NULL)
# Loading data
data("ToothGrowth")
VC<-ToothGrowth[ToothGrowth$supp =="VC",]
OJ<-ToothGrowth[ToothGrowth$supp =="OJ",]
# Loading data
data("ToothGrowth")
VC<-ToothGrowth[ToothGrowth$supp =="VC",]
OJ<-ToothGrowth[ToothGrowth$supp =="OJ",]
### (a) Parametric Method
t.test(VC$len,OJ$len,paired = T)
### Check underlying assumptions
cor(VC$len,OJ$len)
### paired two sample t-test
t.test(VC$len,OJ$len,paired = T)
### Check normality for VC
qqnorm(VC$len)
qqline(VC$len)
### Check normality for OJ
qqnorm(OJ$len)
qqline(OJ$len)
hist(OJ$len)
hist(VC$len)
sd
?sd
B_dif<-numeric(10000)
for (i in 1:10000){
VC_i <-sample(VC$len,nrow(VC),replace = T)
OJ_i <-sample(OJ$len,nrow(VC),replace = T)
B_dif[i]<-median(VC_i)-median(OJ_i)
}
up_lim<-mean(B_dif) + 1.96*sd(B_dif)
low_lim<-mean(B_dif) - 1.96*sd(B_dif)
c(low_lim,up_lim)
B_RV<-numeric(10000)
for (i in 1:10000){
VC_i <-sample(VC$len,nrow(VC),replace = T)
OJ_i <-sample(OJ$len,nrow(VC),replace = T)
B_RV[i]<-var(VC_i)/var(OJ_i)
}
up_lim_r<-mean(B_RV) + 1.96*sd(B_RV)
low_lim_r<-mean(B_RV) - 1.96*sd(B_RV)
c(low_lim_r,up_lim_r)
vc%>%
if(len>20){len = "HIGH"} else{len = "LOW"}
VC<- vc %>%
if(len>20){len = "HIGH"} else{len = "LOW"}
View
View(VC)
VC$cate<-ifelse(VC$len>20,"HIGH","LOW")
OJ$cate<-ifelse(OJ$len>20,"HIGH","LOW")
VC<-VC[,c("dose","cate")]
OJ<-OJ[,c("dose","cate")]
# Loading data
data("ToothGrowth")
VC<-ToothGrowth[ToothGrowth$supp =="VC",]
OJ<-ToothGrowth[ToothGrowth$supp =="OJ",]
### Check normality for VC
qqnorm(VC$len)
qqline(VC$len)
### Check normality for OJ
qqnorm(OJ$len)
qqline(OJ$len)
### Check Independence
cor(VC$len,OJ$len)
### paired two sample t-test
t.test(VC$len,OJ$len,paired = T)
wilcox.test(VC$len,OJ$len,paired = T)
B_dif<-numeric(10000)
for (i in 1:10000){
VC_i <-sample(VC$len,nrow(VC),replace = T)
OJ_i <-sample(OJ$len,nrow(VC),replace = T)
B_dif[i]<-median(VC_i)-median(OJ_i)
}
up_lim<-mean(B_dif) + 1.96*sd(B_dif)
low_lim<-mean(B_dif) - 1.96*sd(B_dif)
c(low_lim,up_lim)
B_RV<-numeric(10000)
for (i in 1:10000){
VC_i <-sample(VC$len,nrow(VC),replace = T)
OJ_i <-sample(OJ$len,nrow(VC),replace = T)
B_RV[i]<-var(VC_i)/var(OJ_i)
}
up_lim_r<-mean(B_RV) + 1.96*sd(B_RV)
low_lim_r<-mean(B_RV) - 1.96*sd(B_RV)
c(low_lim_r,up_lim_r)
VC$cate<-ifelse(VC$len>20,"HIGH","LOW")
OJ$cate<-ifelse(OJ$len>20,"HIGH","LOW")
VC_data<-VC[,c("dose","cate")]
OJ_data<-OJ[,c("dose","cate")]
View(OJ_data)
# Proportion Test
interval_a_1<-c(sum(c(VC$cate=="HIGH")),sum(c(OJ$cate=="HIGH")))
interval_a_2<-c(nrow(VC),nrow(OJ))
prop.test(interval_a_1,interval_a_2)
levels(factor(VC$dose))
table(VC,dose)
table(VC_data,"dose")
table(VC)
table(VC$dose)
table(VC_data)
table(VC_data)
table(OJ_data)
HIGH_VC_DATA<-array(c(0,1,9,10,9,1,1,7,10,9,3,0),c(3,2,2))
# Mantelhaen Test
mantelhaen.test(HIGH_VC_DATA)
library(MASS)
#seperate datasets by supp;
VC_len=ToothGrowth[ToothGrowth$supp=='VC',1]
OJ_len=ToothGrowth[ToothGrowth$supp=='OJ',1]
mean_VC=mean(VC_len)
mean_OJ=mean(OJ_len)
sd_VC=sd(VC_len)
sd_OJ=sd(OJ_len)
mean_VC
mean_OJ
sd_VC
sd_OJ
t.test(VC_len,OJ_len,mu=0, paired = FALSE)
#Independence
cor(VC_len,OJ_len)
#The correlation between VC_len and OJ_len are likely strong.
#Outliers
boxplot(VC_len, OJ_len, names=c('VC', 'OJ'), col=c('pink','lightblue'))
#normal
plot(density(VC_len))
plot(density(OJ_len))
qqnorm(VC_len, main='Check VC_len Normal');qqline(VC_len)
qqnorm(OJ_len, main='Check OJ_len Normal'); qqline(OJ_len)
VC.n<-length(VC_len)
OJ.n<-length(OJ_len)
VC.boot<-numeric(1000)
OJ.boot<-numeric(1000)
for (i in 1:1000){
VC.boot[i]<-median(sample(VC_len,size=VC.n, replace=TRUE))
OJ.boot[i]<-median(sample(OJ_len, size=OJ.n, replace=TRUE))
}
boot.stat<-VC.boot-OJ.boot
quantile(boot.stat, c(0.025,0.0975))
### Classification for each sample
VC$cate<-ifelse(VC$len>20,"HIGH","LOW")
# Loading data
data("ToothGrowth")
VC<-ToothGrowth[ToothGrowth$supp =="VC",]
OJ<-ToothGrowth[ToothGrowth$supp =="OJ",]
### Check normality for VC
qqnorm(VC$len)
qqline(VC$len)
### Check normality for OJ
qqnorm(OJ$len)
qqline(OJ$len)
### Check Independence
cor(VC$len,OJ$len)
### paired two sample t-test
t.test(VC$len,OJ$len,paired = T)
wilcox.test(VC$len,OJ$len,paired = T)
B_dif<-numeric(10000)
for (i in 1:10000){
VC_i <-sample(VC$len,nrow(VC),replace = T)
OJ_i <-sample(OJ$len,nrow(VC),replace = T)
B_dif[i]<-median(VC_i)-median(OJ_i)
}
up_lim<-mean(B_dif) + 1.96*sd(B_dif)
low_lim<-mean(B_dif) - 1.96*sd(B_dif)
c(low_lim,up_lim)
B_RV<-numeric(10000)
for (i in 1:10000){
VC_i <-sample(VC$len,nrow(VC),replace = T)
OJ_i <-sample(OJ$len,nrow(VC),replace = T)
B_RV[i]<-var(VC_i)/var(OJ_i)
}
up_lim_r<-mean(B_RV) + 1.96*sd(B_RV)
low_lim_r<-mean(B_RV) - 1.96*sd(B_RV)
c(low_lim_r,up_lim_r)
### Classification for each sample
VC$cate<-ifelse(VC$len>20,"HIGH","LOW")
OJ$cate<-ifelse(OJ$len>20,"HIGH","LOW")
levels(factor(VC$dose))
### Classification for each sample
ToothGrowth$cate<-ifelse(ToothGrowth$len>20,"HIGH","LOW")
levels(factor(ToothGrowth$dose))
### Create 3 separate table
dose0.5<-ToothGrowth[c(ToothGrowth$dose==0.5),c("dose","cate")]
dose1<-ToothGrowth[c(ToothGrowth$dose==1),c("dose","cate")]
dose2<-ToothGrowth[c(ToothGrowth$dose==2),c("dose","cate")]
# Proportion Test
interval_a_1<-c(sum(c(VC$cate=="HIGH")),sum(c(OJ$cate=="HIGH")))
interval_a_2<-c(nrow(VC),nrow(OJ))
prop.test(interval_a_1,interval_a_2)
table(dose0.5)
table(dose1)
table(dose2)
### Create 3 separate table
dose0.5<-ToothGrowth[c(ToothGrowth$dose==0.5),c("supp","cate")]
dose1<-ToothGrowth[c(ToothGrowth$dose==1),c("supp","cate")]
dose2<-ToothGrowth[c(ToothGrowth$dose==2),c("supp","cate")]
# Proportion Test
interval_a_1<-c(sum(c(VC$cate=="HIGH")),sum(c(OJ$cate=="HIGH")))
interval_a_2<-c(nrow(VC),nrow(OJ))
prop.test(interval_a_1,interval_a_2)
table(dose0.5)
table(dose1)
table(dose2)
HIGH_VC_DATA<-array(c(1,0,9,10,7,1,3,9,10,9,0,1),c(2,2,3))
# Mantelhaen Test
mantelhaen.test(HIGH_VC_DATA)
HIGH_VC_DATA<-array(c(0,1,10,9,1,7,9,3,9,10,1,0),c(2,2,3))
# Mantelhaen Test
mantelhaen.test(HIGH_VC_DATA)
quantile(B_dif,c(0.025,0.975))
VC.n<-length(VC_len)
library(MASS)
#seperate datasets by supp;
VC_len=ToothGrowth[ToothGrowth$supp=='VC',1]
OJ_len=ToothGrowth[ToothGrowth$supp=='OJ',1]
mean_VC=mean(VC_len)
mean_OJ=mean(OJ_len)
sd_VC=sd(VC_len)
sd_OJ=sd(OJ_len)
mean_VC
mean_OJ
sd_VC
sd_OJ
t.test(VC_len,OJ_len,mu=0, paired = FALSE)
wilcox.test(VC_len,OJ_len, mu=0, paired=FALSE)
#Independence
cor(VC_len,OJ_len)
#The correlation between VC_len and OJ_len are likely strong.
#Outliers
boxplot(VC_len, OJ_len, names=c('VC', 'OJ'), col=c('pink','lightblue'))
#normal
plot(density(VC_len))
plot(density(OJ_len))
qqnorm(VC_len, main='Check VC_len Normal');qqline(VC_len)
qqnorm(OJ_len, main='Check OJ_len Normal'); qqline(OJ_len)
VC.n<-length(VC_len)
OJ.n<-length(OJ_len)
VC.boot<-numeric(10000)
OJ.boot<-numeric(10000)
for (i in 1:10000){
VC.boot[i]<-median(sample(VC_len,size=VC.n, replace=TRUE))
OJ.boot[i]<-median(sample(OJ_len, size=OJ.n, replace=TRUE))
}
boot.stat<-VC.boot-OJ.boot
quantile(boot.stat, c(0.025,0.0975))
View(VC)
# Loading data
data("ToothGrowth")
VC<-ToothGrowth[ToothGrowth$supp =="VC",]
OJ<-ToothGrowth[ToothGrowth$supp =="OJ",]
### Check normality for VC
qqnorm(VC$len)
qqline(VC$len)
### Check normality for OJ
qqnorm(OJ$len)
qqline(OJ$len)
### Check Independence
cor(VC$len,OJ$len)
### paired two sample t-test
t.test(VC$len,OJ$len,paired = T)
wilcox.test(VC$len,OJ$len,paired = T)
B_dif<-numeric(10000)
for (i in 1:10000){
VC_i <-sample(VC$len,nrow(VC),replace = T)
OJ_i <-sample(OJ$len,nrow(VC),replace = T)
B_dif[i]<-abs(median(VC_i)-median(OJ_i))
}
up_lim<-mean(B_dif) + 1.96*sd(B_dif)
low_lim<-mean(B_dif) - 1.96*sd(B_dif)
c(low_lim,up_lim)
B_RV<-numeric(10000)
for (i in 1:10000){
VC_i <-sample(VC$len,nrow(VC),replace = T)
OJ_i <-sample(OJ$len,nrow(VC),replace = T)
B_RV[i]<-var(VC_i)/var(OJ_i)
}
up_lim_r<-mean(B_RV) + 1.96*sd(B_RV)
low_lim_r<-mean(B_RV) - 1.96*sd(B_RV)
c(low_lim_r,up_lim_r)
### Create "cate"
ToothGrowth$cate<-ifelse(ToothGrowth$len>20,"HIGH","LOW")
VC$cate<-ifelse(VC$len>20,"HIGH","LOW")
OJ$cate<-ifelse(OJ$len>20,"HIGH","LOW")
levels(factor(ToothGrowth$dose))
### Create 3 separate table
dose0.5<-ToothGrowth[c(ToothGrowth$dose==0.5),c("supp","cate")]
dose1<-ToothGrowth[c(ToothGrowth$dose==1),c("supp","cate")]
dose2<-ToothGrowth[c(ToothGrowth$dose==2),c("supp","cate")]
# Proportion Test
interval_a_1<-c(sum(c(VC$cate=="HIGH")),sum(c(OJ$cate=="HIGH")))
interval_a_2<-c(nrow(VC),nrow(OJ))
prop.test(interval_a_1,interval_a_2)
table(dose0.5)
table(dose1)
table(dose2)
HIGH_VC_DATA<-array(c(0,1,10,9,1,7,9,3,9,10,1,0),c(2,2,3))
# Mantelhaen Test
mantelhaen.test(HIGH_VC_DATA)
# Loading data
data("ToothGrowth")
VC<-ToothGrowth[ToothGrowth$supp =="VC",]
OJ<-ToothGrowth[ToothGrowth$supp =="OJ",]
### Check normality for VC
qqnorm(VC$len)
qqline(VC$len)
### Check normality for OJ
qqnorm(OJ$len)
qqline(OJ$len)
### Check Independence
cor(VC$len,OJ$len)
### paired two sample t-test
t.test(VC$len,OJ$len,paired = T)
wilcox.test(VC$len,OJ$len,paired = T)
B_dif<-numeric(10000)
for (i in 1:10000){
VC_i <-sample(VC$len,nrow(VC),replace = T)
OJ_i <-sample(OJ$len,nrow(VC),replace = T)
B_dif[i]<-abs(median(VC_i)-median(OJ_i))
}
up_lim<-mean(B_dif) + 1.96*sd(B_dif)
low_lim<-mean(B_dif) - 1.96*sd(B_dif)
c(low_lim,up_lim)
B_RV<-numeric(10000)
for (i in 1:10000){
VC_i <-sample(VC$len,nrow(VC),replace = T)
OJ_i <-sample(OJ$len,nrow(VC),replace = T)
B_RV[i]<-var(VC_i)/var(OJ_i)
}
up_lim_r<-mean(B_RV) + 1.96*sd(B_RV)
low_lim_r<-mean(B_RV) - 1.96*sd(B_RV)
c(low_lim_r,up_lim_r)
### Create "cate"
ToothGrowth$cate<-ifelse(ToothGrowth$len>20,"HIGH","LOW")
VC$cate<-ifelse(VC$len>20,"HIGH","LOW")
OJ$cate<-ifelse(OJ$len>20,"HIGH","LOW")
levels(factor(ToothGrowth$dose))
### Create 3 separate table
dose0.5<-ToothGrowth[c(ToothGrowth$dose==0.5),c("supp","cate")]
dose1<-ToothGrowth[c(ToothGrowth$dose==1),c("supp","cate")]
dose2<-ToothGrowth[c(ToothGrowth$dose==2),c("supp","cate")]
# Proportion Test
interval_a_1<-c(sum(c(VC$cate=="HIGH")),sum(c(OJ$cate=="HIGH")))
interval_a_2<-c(nrow(VC),nrow(OJ))
prop.test(interval_a_1,interval_a_2)
table(dose0.5)
table(dose1)
table(dose2)
HIGH_VC_DATA<-array(c(0,1,10,9,7,7,9,3,9,10,1,0),c(2,2,3))
# Mantelhaen Test
mantelhaen.test(HIGH_VC_DATA)
### check variance
var.test(OJ$len, VC$len)
library(shiny)
runExample("01_hello")
?sliderInput
?mainPanel
# Loading data
data("ToothGrowth")
VC<-ToothGrowth[ToothGrowth$supp =="VC",]
OJ<-ToothGrowth[ToothGrowth$supp =="OJ",]
### Check normality for VC
qqnorm(VC$len)
qqline(VC$len)
shapiro.test(VC$len)
### Check normality for OJ
qqnorm(OJ$len)
qqline(OJ$len)
shapiro.test(OJ$len)
### Check Independence
cor(VC$len,OJ$len)
### check variance
var.test(OJ$len, VC$len)
### paired two sample t-test
t.test(VC$len,OJ$len,paired = T)
wilcox.test(VC$len,OJ$len,paired = T)
B_dif<-numeric(10000)
for (i in 1:10000){
VC_i <-sample(VC$len,nrow(VC),replace = T)
OJ_i <-sample(OJ$len,nrow(VC),replace = T)
B_dif[i]<-abs(median(VC_i)-median(OJ_i))
}
quantile(B_dif,c(0.025,0.975))
B_RV<-numeric(10000)
for (i in 1:10000){
VC_i <-sample(VC$len,nrow(VC),replace = T)
OJ_i <-sample(OJ$len,nrow(VC),replace = T)
B_RV[i]<-var(VC_i)/var(OJ_i)
}
quantile(B_RV,c(0.025,0.975))
### Create "cate"
ToothGrowth$cate<-ifelse(ToothGrowth$len>20,"HIGH","LOW")
VC$cate<-ifelse(VC$len>20,"HIGH","LOW")
OJ$cate<-ifelse(OJ$len>20,"HIGH","LOW")
levels(factor(ToothGrowth$dose))
### Create 3 separate table
dose0.5<-ToothGrowth[c(ToothGrowth$dose==0.5),c("supp","cate")]
dose1<-ToothGrowth[c(ToothGrowth$dose==1),c("supp","cate")]
dose2<-ToothGrowth[c(ToothGrowth$dose==2),c("supp","cate")]
# Proportion Test
interval_a_1<-c(sum(c(VC$cate=="HIGH")),sum(c(OJ$cate=="HIGH")))
interval_a_2<-c(nrow(VC),nrow(OJ))
prop.test(interval_a_1,interval_a_2)
table(dose0.5)
table(dose1)
table(dose2)
table(dose0.5)
table(dose1)
table(dose2)
HIGH_VC_DATA<-array(c(0,1,10,9,7,7,9,3,9,10,1,0),c(2,2,3))
# Mantelhaen Test
mantelhaen.test(HIGH_VC_DATA)
HIGH_VC_DATA<-array(c(1,0,9,10,7,1,3,9,10,9,0,1),c(2,2,3))
# Mantelhaen Test
mantelhaen.test(HIGH_VC_DATA)
